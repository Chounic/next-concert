import { getSecrets } from '@netlify/functions'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { ReactElement, useCallback, useState } from 'react'
import ConcertImage from '../components/ConcertImage'
import Layout from '../components/Layout'
import { SpotifyContext } from '../context/SpotifyProvider'
import styles from '../styles/Home.module.css'
import useEmblaCarousel from 'embla-carousel-react'



export default function Index(props: any) {

  const [emblaRef, emblaApi] = useEmblaCarousel({ slidesToScroll: 3 })

  const scrollPrev = useCallback(() => {
    if (emblaApi) emblaApi.scrollPrev()
  }, [emblaApi])

  const scrollNext = useCallback(() => {
    if (emblaApi) emblaApi.scrollNext()
  }, [emblaApi])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='container h-screen xl:px-60' >
        <div className='bg-zinc-700 overflow-hidden relative'>
          <div className="" ref={emblaRef}>

            <div className="flex box-border h-96 ">
              {props.data.map((item: any, index: any) => {
                console.log("ðŸš€ ~ file: index.tsx ~ line 24 ~ {props.data.results.map ~ item", item)
                return (
                  <Link
                    key={index}
                    href={{
                      pathname: '/Home',
                      query: { token: props.secrets.spotify.bearerToken },
                    }}
                    passHref
                  >
                    <div className='flex-[0_0_350px] ...' style={{ border: '1px dashed black' }}>
                      <ConcertImage data={item} token={props.secrets.spotify.bearerToken} />
                      <p>{item.name}</p>
                      {/* {item.entities[0] ? <p>{item.entities[0].name}</p> : '' */}
                      <p>{item.dates.start.localDate} at {item.dates.start.localTime}</p>
                      <p>{item.dates.status.code}</p>
                      <p>{item.classifications[0].segment.name}</p>
                      <p>{item._embedded.venues[0].name} in {item._embedded.venues[0].city.name}</p>
                    </div>
                  </Link>
                )
              })
              }
            </div>
          </div>
            <button className="absolute  top-40" onClick={scrollPrev}>
              Prev
            </button>
            <button className="absolute top-40 right-0" onClick={scrollNext}>
              Next
            </button>
        </div>
      </main>
    </div>
  )
}

Index.getLayout = function getLayout(page: ReactElement) {

  const toktok = 'toktok';


  return (

    <Layout>
      {page}
    </Layout>

  )
}





export async function getStaticProps() {

  const secrets = await getSecrets();
  const res = await fetch(`https://app.ticketmaster.com/discovery/v2/events.json?apikey=${process.env.ACCESS_TOKEN}&classificationName=[Music]&city=[Los Angeles]&radius=50&unit=km`);
  console.log("ðŸš€ ~ file: index.tsx ~ line 102 ~ getStaticProps ~ res", res.body)
  const resJson = await res.json();
  const data = resJson._embedded.events;
  console.log("ðŸš€ ~ file: index.tsx ~ line 98 ~ getStaticProps ~ resvvv", resJson._embedded.events)

  return {
    props: {
      secrets,
      data
    }
  }
}



